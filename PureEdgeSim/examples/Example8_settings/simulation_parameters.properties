# default config file
# simulation time in minutes
simulation_time=60
# initialization time (in seconds) : the time needed to generate all the resources, before starting the simulation
initialization_time=30
parallel_simulation=false
# interval between events (in seconds) set it between 0.1 and 1 (or 2 3 4..) the more it is the less will be the accuracy
update_interval=1
# pause length between iterations (in seconds)
pause_length=3

# display real time charts
display_real_time_charts=true
# close charts when simulation ends 
auto_close_real_time_charts=true
# real time charts refresh interval
charts_update_interval=1
# save charts as bitmap files
save_charts=true

# simulation area/map (meters) 
# remember to update the edge data centers location when you change the map size (in the edge_datacenters.xml file)
length=100
width=100

# wlan range (meters): the distance (radius) in which two devices (or a device and a edge data center) can offload to each others. 
# once a device change its location if it quits this range, the task will be considered as failed due to mobility.
edge_devices_range=20
# be carefull when setting the edge data centers coverage area when the EDGE_ONLY architecture is used,as some tasks may fail (because no resources found)
# so be sure that edge servers cover all the map. except if your scenario requires low coverage area
edge_datacenters_coverage=200

# enable registry 
# true : means that the device will download the application from the registry 
#       after receiving the offloaded tasks ( the container size will be used, see applications.xml file)
# false: the device will execute directly the offloaded task (no container will be downloaded           
enable_registry=false
# CLOUD = default location, you can mirror the container elsewhere programmatically by extending the defaultNetworkModel  
registry_mode=CACHE

enable_orchestrators=true
# deploy the orchestration node (Options: CLOUD, EDGE, or MIST, you can add your own by editing the  selectOrchestrators() method in DataCentersManager.java)  
# Edge means that every edge device orchestrates its tasks for itself  
deploy_orchestrator=CLUSTER

# end the simulation when the time ends or wait to all the tasks to get executed?
# it better to wait for all the tasks to get executed to get better results, however this may takes hours longer
# disabling this will gives you high tasks failure due to stopping simulation early (see the console) but it will decrease the simulation time
wait_for_all_tasks=true

# log settings
save_log_file=true
clear_output_folder=false
deep_log_enabled=false

# edge devices count
min_number_of_edge_devices=100
max_number_of_edge_devices=100
edge_device_counter_size=100

# network settings (Latency is only used for determining shortest paths in the routing)
# bandwidths in  megabits per seconds 
WAN_BANDWIDTH = 1000
WAN_LATENCY = 0.2
WAN_NANOJOUL_PER_BIT = 46.7 

WIFI_BANDWIDTH = 1300
WIFI_DEVICE_TO_DEVICE_NANOJOUL_PER_BIT = 374.01 
WIFI_DEVICE_TO_ACCESS_POINT_NANOJOUL_PER_BIT = 306.97
WIFI_ACCESS_POINT_TO_DEVICE_NANOJOUL_PER_BIT = 160.9
WIFI_LATENCY = 0.01 

ETHERNET_BANDWIDTH = 1000
ETHERNET_NANOJOUL_PER_BIT = 0
ETHERNET_LATENCY = 0.1

LTE_BANDWIDTH = 100
LTE_DEVICE_NANOJOUL_PER_BIT = 438.4  
LTE_BASE_STATION_NANOJOUL_PER_BIT_UP_LINK = 6200
LTE_BASE_STATION_NANOJOUL_PER_BIT_DOWN_LINK = 20500
LTE_LATENCY = 0.01

# enabling this will give more accurate results, but also will increase the simulation duration
realistic_network_model=false
# network update interval (in seconds) transmission update ( 0.1 to 1= better accuracy but it takes longer, 2 or more = less details but faster simulation)
# default=1 (to minimize simulation time)
network_update_interval=1

# task orchestration settings
# use ',' for multiple values 
orchestration_architectures=EDGE_ONLY
#CLOUD_ONLY,EDGE_ONLY,MIST_ONLY,MIST_AND_CLOUD,EDGE_AND_CLOUD,ALL 
# use ',' for multiple values  
orchestration_algorithms=FUZZY_LOGIC
#INCREASE_LIFETIME,ROUND_ROBIN,TRADE_OFF